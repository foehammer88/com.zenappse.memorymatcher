package com.zenappse.memorymatcher;

import android.app.Activity;
import android.content.Intent;

import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;

import java.util.ArrayList;
import java.util.Set;


/**
 * A login screen that offers login via username.
 *
 * Auto-generated via Android Studio -> LoginActivity
 *
 * Modified by Patrick Ganson
 */
public class LoginMainActivity extends Activity {

    private static final String EXTRA_USERNAME = "username";

    private static final int TABBED_GAME_REQUEST = 9001;
    private static final String TAG = "LoginMainActivity";

    private AutoCompleteTextView mUsernameTextView;

    private GameStorageManager gameStorageManager = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login_main);

        gameStorageManager = new GameStorageManager(this);

        // Set up the login form.
        mUsernameTextView = (AutoCompleteTextView) findViewById(R.id.username);
        populateAutoComplete();

        String lastUsedUsername = gameStorageManager.getLastUsedUsername();

        if (!TextUtils.isEmpty(lastUsedUsername)) {
            mUsernameTextView.setText(lastUsedUsername);
            mUsernameTextView.setSelection(lastUsedUsername.length());
        }

        Button mSignInButton = (Button) findViewById(R.id.sign_in_button);
        mSignInButton.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View view) {
                attemptLogin();
            }
        });
    }

    private void populateAutoComplete() {
        Set<String> usernames = gameStorageManager.getUsernames();

        addUsernamesToAutoComplete(usernames);
    }


    /**
     * Auto-generated by Android Studio
     * Modified to suit this specific apps needs
     *
     * If textView is empty, then display error. Else, register username if
     * it doesn't exist, then proceed to the next activity.
     */
    public void attemptLogin() {
        // Reset errors.
        mUsernameTextView.setError(null);

        // Store values at the time of the login attempt.
        String username = mUsernameTextView.getText().toString();

        boolean cancel = false;
        View focusView = null;

        // Check for a valid email address.
        if (TextUtils.isEmpty(username)) {
            mUsernameTextView.setError(getString(R.string.error_field_required));
            focusView = mUsernameTextView;
            cancel = true;
        }

        if (cancel) {
            // There was an error; don't attempt login and focus the first
            // form field with an error.
            focusView.requestFocus();
        } else {

            if (!authenticateUsername(username)) {
                // "Register" a new user since username was not found
                gameStorageManager.registerUsername(username);
            }

            gameStorageManager.setLastUsedUsername(username);

            Intent tabbedGameIntent = new Intent(this, TabbedGameActivity.class);
            tabbedGameIntent.putExtra(EXTRA_USERNAME, username);
            startActivityForResult(tabbedGameIntent, TABBED_GAME_REQUEST);
        }
    }

    private boolean authenticateUsername(String username) {
        Set<String> usernames = gameStorageManager.getUsernames();
        String lastUsedUsername = gameStorageManager.getLastUsedUsername();

        Log.d(TAG, usernames.toString());
        Log.d(TAG, lastUsedUsername);

        // Save method on set and check if username was last used
        if ( lastUsedUsername.equals(username)) {
            return true;
        }

        boolean usernameExists = false;

        if (usernames.contains(username)) {
            usernameExists = true;
        }

        return usernameExists;
    }

    private void addUsernamesToAutoComplete(Set<String> usernames) {
        // Create adapter to tell the AutoCompleteTextView what to show in its dropdown list.
        ArrayAdapter<String> adapter = new ArrayAdapter<>(LoginMainActivity.this,
                android.R.layout.simple_dropdown_item_1line, new ArrayList<>(usernames));

        mUsernameTextView.setAdapter(adapter);
    }
}



